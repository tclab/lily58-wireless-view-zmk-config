#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        #define OS_LEAD  &kp RALT &kp U  // OS specific sequence to initialize unicode
        #define OS_TRAIL &kp RET         // OS specific sequence to terminate unicode
        word_left: word_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RCTRL &kp LEFT_ARROW>;
            label = "WORD_LEFT";
        };

        word_right: word_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RCTRL &kp RIGHT>;
            label = "WORD_RIGHT";
        };

        select_word: select_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&word_left &word_right &sk LEFT_SHIFT &word_left>;
            label = "SELECT_WORD";
        };

        delete_word: delete_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&select_word &kp BACKSPACE>;
            label = "DELETE_WORD";
        };

        ntil: ntil {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RALT &kp U &kp 0 &kp 0 &kp D &kp 1 &kp RET>;
            label = "UC_NTIL_CAP";
            wait-ms = <5>;
            tap-ms = <5>;
        };

        ntil_cap: ntil_cap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RALT &kp U &kp 0 &kp 0 &kp F &kp 1 &kp RET>;
            label = "UC_NTIL";
            wait-ms = <5>;
            tap-ms = <5>;
        };
    };

    behaviors {
        UC_NTIL: UC_NTIL {
            compatible = "zmk,behavior-mod-morph";
            label = "UC_NTIL";
            bindings = <&ntil>, <&ntil_cap>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            masked_mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Default";
            bindings = <
&kp ESC     &kp N1  &kp N2  &kp N3    &kp N4  &kp N5                            &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB     &kp Q   &kp W   &kp E     &kp R   &kp T                             &kp Y   &kp U   &kp I      &kp O    &kp P     &kp ENTER
&kp LSHIFT  &kp A   &kp S   &kp D     &kp F   &kp G                             &kp H   &kp J   &kp K      &kp L    &UC_NTIL  &kp RSHIFT
&kp LCTRL   &kp Z   &kp X   &kp C     &kp V   &kp B     &kp LBKT     &kp RBKT   &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                            &kp LALT  &mo 1   &kp LGUI  &kp SPACE    &kp SPACE  &mo 2   &mo 3   &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Soft {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Soft";
            bindings = <
&bt BT_CLR     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                        &trans  &trans  &trans  &trans  &trans           &trans
&kp GRAVE      &kp EXCL      &kp AT        &kp LBRC      &kp RBRC      &trans                              &trans  &trans  &trans  &trans  &trans           &trans
&kp LESS_THAN  &kp EQUAL     &kp MINUS     &kp LPAR      &kp RPAR      &kp GREATER_THAN                    &trans  &trans  &trans  &trans  &kp RIGHT_SHIFT  &trans
&trans         &kp PRCNT     &kp DOLLAR    &kp LBKT      &kp RBKT      &trans            &trans    &trans  &trans  &trans  &trans  &trans  &trans           &trans
                                           &trans        &trans        &trans            &trans    &trans  &none   &none   &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Nav {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Nav";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans        &trans      &trans        &trans          &kp TAB      &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans                    &delete_word  &word_left  &select_word  &trans          &word_right  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp DEL       &kp LEFT    &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT    &kp ENTER
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &kp HOME    &kp END       &trans          &trans       &trans
                        &trans  &trans  &trans  &trans    &trans  &trans        &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans        &trans        &trans        &kp KP_DIVIDE    &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp N7        &kp N8        &kp N9        &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_SUBTRACT  &kp PERIOD
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS         &kp EQUAL
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans        &trans
            >;

            label = "Numbers";
        };

        Functions {
            bindings = <
&trans  &trans  &trans  &trans   &trans   &trans                     &trans  &trans       &trans             &trans           &trans                  &trans
&trans  &trans  &trans  &trans   &trans   &trans                     &trans  &kp K_MUTE2  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRI_DN            &kp C_BRIGHTNESS_INC
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &trans  &trans       &kp C_PREVIOUS     &kp C_NEXT       &kp C_BACKLIGHT_TOGGLE  &trans
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &trans  &trans       &trans             &trans           &trans                  &trans
                        &trans   &trans   &trans   &trans    &trans  &trans  &trans       &trans
            >;

            label = "Functions";
        };
    };
};
