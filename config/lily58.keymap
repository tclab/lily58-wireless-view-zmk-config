#include <zmk-helpers/helper.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <4000>; };

/ {
    macros {
        word_left: word_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RCTRL &kp LEFT_ARROW>;
            label = "WORD_LEFT";
        };

        word_right: word_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RCTRL &kp RIGHT>;
            label = "WORD_RIGHT";
        };

        select_word_L: select_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(LEFT))>;
            label = "SELECT_WORD";
        };

        delete_word_L: delete_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(BACKSPACE)>;
            label = "DELETE_WORD";
        };

        ntil: ntil {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RALT &kp N4 &kp N>;
            label = "UC_NTIL";
            wait-ms = <5>;
            tap-ms = <5>;
        };

        ntil_cap: ntil_cap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RALT &kp N4 &kp LS(N)>;
            label = "UC_NTIL_CAP";
            wait-ms = <5>;
            tap-ms = <5>;
        };

        ctrl_tab: ctrl_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk RCTRL &kp TAB>;
            label = "CTRL_TAB";
        };

        ctrl_shift_tab: ctrl_shift_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LC(LEFT_SHIFT) &kp TAB>;
            label = "CTRL_SHIFT_TAB";
        };

        left_desk: left_desk {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LC(LGUI) &kp LEFT>;
            label = "LEFT_DESK";
        };

        right_desk: right_desk {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LC(LGUI) &kp RIGHT>;
            label = "RIGHT_DESK";
        };

        select_word_R: select_word_R {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(RIGHT))>;
            label = "SELECT_WORD_R";
        };

        delete_word_R: delete_word_R {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(DELETE)>;
            label = "DELETE_WORD_R";
        };
    };

    behaviors {
        ntilde: ntilde {
            compatible = "zmk,behavior-mod-morph";
            label = "NTILDE";
            bindings = <&ntil>, <&ntil_cap>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comma_semi: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMI";
            bindings = <&kp COMMA>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        period_colon: period_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD_COLON";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Default";
            bindings = <
&kp ESC     &ctrl_shift_tab  &ctrl_tab  &left_desk  &right_desk   &trans                          &kp N6  &kp N7  &kp N8       &kp N9         &kp N0     &kp BACKSPACE
&kp TAB     &kp Q            &kp W      &kp E       &kp R         &kp T                           &kp Y   &kp U   &kp I        &kp O          &kp P      &kp ENTER
&kp LSHIFT  &kp A            &kp S      &kp D       &kp F         &kp G                           &kp H   &kp J   &kp K        &kp L          &kp TILDE  &kp RSHIFT
&kp LCTRL   &kp Z            &kp X      &kp C       &kp V         &kp B   &kp LBKT     &kp RBKT   &kp N   &kp M   &comma_semi  &period_colon  &kp MINUS  &kp RCTRL
                                        &kp LALT    &kp LEFT_GUI  &mo 1   &kp ENTER    &kp SPACE  &mo 2   &mo 3   &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Symbols {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Symbols";
            bindings = <
&trans         &trans     &trans        &trans    &trans    &trans                              &trans     &trans             &trans            &trans  &trans           &trans
&trans         &trans     &kp AT        &kp LBRC  &kp RBRC  &trans                              &trans     &trans             &trans            &trans  &trans           &trans
&kp LESS_THAN  &kp EQUAL  &kp QUESTION  &kp LPAR  &kp RPAR  &kp GREATER_THAN                    &kp EXCL   &kp AMPERSAND      &kp PIPE          &trans  &kp RIGHT_SHIFT  &trans
&trans         &kp PRCNT  &kp DOLLAR    &kp LBKT  &kp RBKT  &trans            &trans    &trans  &kp GRAVE  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &trans  &trans           &trans
                                        &trans    &trans    &trans            &trans    &trans  &none      &none              &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Nav {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Nav";
            bindings = <
&trans   &trans      &trans          &trans          &trans          &trans                    &trans   &trans    &trans        &trans     &trans  &kp BACKSPACE
&kp TAB  &trans      &trans          &trans          &trans          &trans                    &trans   &trans    &kp UP_ARROW  &trans     &trans  &trans
&trans   &word_left  &select_word_L  &select_word_R  &word_right     &trans                    &kp DEL  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &kp ENTER
&trans   &trans      &trans          &delete_word_L  &delete_word_R  &trans  &trans    &trans  &trans   &kp HOME  &kp END       &trans     &trans  &trans
                                     &trans          &trans          &trans  &trans    &trans  &trans   &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Numbers {
            bindings = <
&trans  &trans     &trans    &trans     &trans    &trans                    &trans  &kp N7     &kp N8      &kp N9  &trans  &trans
&trans  &trans     &trans    &trans     &trans    &trans                    &trans  &kp N4     &kp N5      &kp N6  &trans  &trans
&trans  &kp SLASH  &kp STAR  &kp MINUS  &kp PLUS  &trans                    &trans  &kp N1     &kp N2      &kp N3  &trans  &trans
&trans  &trans     &trans    &trans     &trans    &trans  &trans    &trans  &trans  &kp EQUAL  &kp PERIOD  &kp N0  &trans  &trans
                             &trans     &trans    &trans  &trans    &trans  &trans  &trans     &trans
            >;

            label = "Numbers";
        };

        Functions {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans      &trans             &trans           &trans          &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans      &trans             &trans           &trans          &trans
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                          &trans  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREVIOUS  &kp C_NEXT
&kp F7      &kp F8        &kp F9        &kp F10       &kp F11       &kp F12       &trans    &trans  &trans  &trans      &kp C_BRI_DN       &kp C_BRI_UP     &trans          &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans  &trans      &trans
            >;

            label = "Functions";
        };
    };
};
